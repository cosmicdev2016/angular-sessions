Template approach:
    ☐ Refer: Day-7_Forms_Tempate_vs_Reactive.PNG
    ☐ 'FormsModule' includes lot of forms related functionality. Make sure app.module file has that entry in your imports. 
        import { FormsModule } from '@angular/forms'
    ☐ You need this for template driven approach to work.

TD: Creating the Form and Registering Controls: 
    ☐ To make your control available to angular, you need to do 2 things:
        ☐ add 'ngModel' to the control (not as 2 way binding syntax)
        ☐ add 'name' attribute to the form control

TD: Submitting and Using the Form:
    ☐ We don't add click event on Submit button because that would trigger the default Javascript submit event.
    ☐ We override it by using another directive provided by FormsModule '(ngSubmit)' on <form> element.
        <form (ngSubmit)="onSubmit()">
        In TS file: onSubmit() { }
    ☐ Get the reference to the form:
        <form (ngSubmit)="onSubmit(f)" #f>
        In TS file: onSubmit(form: HTMLFormElement) { }
        This will give you the DOM representation of the form.
    ☐ Get the value object representaion of the form:
        <form (ngSubmit)="onSubmit(f)" #f="ngForm">
        In TS file: onSubmit(form: NgForm) { } (Need to import 'NgForm' it from @angular/forms)
        'form.value' represents the value object bound to this form.


Reactive approach:
    ☐ 
